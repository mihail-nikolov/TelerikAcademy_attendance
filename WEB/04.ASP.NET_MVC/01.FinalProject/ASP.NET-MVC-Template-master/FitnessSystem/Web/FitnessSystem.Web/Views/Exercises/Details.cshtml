@model  FitnessSystem.Web.ViewModels.Exercises.ExerciseFullViewModel
@using Microsoft.AspNet.Identity

@{
    ViewBag.Title = "Details";
}

@Html.ValidationSummary(true)

<h3>@Model.Title</h3>
<div class="row">
    <i>by: </i><strong>@Model.Author</strong> <i>category: </i>
    <strong class="text-danger"><a href="~/Categories/Details/@Model.CategoryId">@Model.Category </a></strong>
    <i>added: </i><strong>@Model.CreatedOn</strong>
    <br />
    @if (Request.IsAuthenticated && Model.AuthorId == User.Identity.GetUserId())
    {
        @Html.ActionLink("Edit", "EditExercise", "Exercises",
                             new { Model.Id }, new { @class = "btn btn-primary" })

        using (Html.BeginForm("Delete", "Exercises", new { area = string.Empty, id = Model.Id }, FormMethod.Post))
        {
            @Html.HiddenFor(model => model.Id)
            <input type="submit" value="Delete" class="btn btn-danger" />
        }
    }
</div>
<br />
<div class="row">
    <span>@Html.Raw(Model.Content)</span><br /><br />
    @if (Request.IsAuthenticated && Model.AuthorId != User.Identity.GetUserId())
    {
        <div class="btn btn-primary" data-action="up" data-id="@Model.Id">Like </div>
        <div data-action="votesCount">@Model.Votes</div>
        <div class="btn btn-danger" data-action="down" data-id="@Model.Id">DisLike</div>
        <br /><br />
    }
    else
    {
        <i>rating: </i><strong class="text-danger">@Model.Votes</strong><br />
    }
</div>
@Html.Partial("_Comments")
<style>
    div[data-action='up'], div[data-action='down'], div[data-action='add-comment'] {
        cursor: pointer;
    }
</style>

<script>
    $("div[data-action='add-comment']").click(function () {
        var form = $('#__AjaxAntiForgeryForm');
        var token = $('input[name="__RequestVerificationToken"]', form).val();
        var id = @Model.Id;
        var commentContent = $('#text-comment').val();
        var data = {
            __RequestVerificationToken: token,
            exId: id, content: commentContent
        }
        $.ajax({
            url: '/Comments/Comment/',
            type: 'POST',
            data: data,
            success: function (data) {
                var newComment = data.Content;
                $("#addCommentHere").append("<div class='row'>" + newComment + "</div>");
            },
            error: function err(data) { alert('cannot send empty comments'); }
        });
    });

    @*$("div[data-action='add-comment']").click(function () {
        var id = @Model.Id;
        var commentContent = $('#text-comment').val();
        $.post('/Comments/Comment/', { exId: id, content: commentContent },
           function (data) {
               var newComment = data.Content;
               $("#addCommentHere").append("<div class='row'>" + newComment + "</div>");
           });

    });*@

    $("div[data-action='up']").click(function () {
        var id = @Model.Id;
        voteClick(id, 1);
    });

    $("div[data-action='down']").click(function () {
        var id = @Model.Id;
        voteClick(id, -1);
    });

    function voteClick(id, type) {
        $.post('/Votes/Vote/', { exId: id, points: type },
            function (data) {
                var newVotes = data.Count;
                $("div[data-action='votesCount']")
                    .html(newVotes);
            });
    }
</script>

@section scripts{
    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/jqueryval")
    <script src="@Url.Content("~/Scripts/jquery.unobtrusive-ajax.js")" type="text/javascript"></script>
}